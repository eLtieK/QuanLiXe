/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu.vehicle;
import database.Manager;
import database.Schedule;
import database.Vehicles;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import menu.vehicle.TableVehicles;
/**
 *
 * @author User
 */
public class MoreInformationVehicles extends javax.swing.JFrame {

    /**
     * Creates new form MoreInformationVehicles
     */
    private int IDofVehicle;
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    public MoreInformationVehicles(int id) throws Exception {
        initComponents();
        IDofVehicle = id;
        setInfo(Manager.getVehicle(id));
        setButtonFalse();
//        Schedule_maintenance.setDefaultCapable(true);
//        Close.setDefaultCapable(true);
    }
    public void check_vehicle_done_maintenance(Vehicles vehicle) {
        Thread updateThread = new Thread(() -> {
            while(true) {
                try {
                    if(vehicle.getDate_end().equals("0000-00-00 00:00:00")) {
                        break;
                    }
                    else if(vehicle.chech_end()) {
                        MaintenanceDone maintenance = new MaintenanceDone(vehicle.getId());
                        maintenance.setVisible(true);
                        maintenance.setLocationRelativeTo(null);  
                        break;
                    }
                    Thread.sleep(5000);
                } catch (Exception ex) {
                    Logger.getLogger(Manager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        });
        updateThread.start();
    }
    public void check_vehicle_start_maintenance(Vehicles vehicle) {
        Thread updateThread = new Thread(() -> {
            while(true) {
                try {
                    if(vehicle.getDate_start().equals("0000-00-00 00:00:00")) {
                        break;
                    }
                    else if(vehicle.getStatus().equals(Vehicles.Status.under_maintenance)) {
                        break;
                    }
                    else if(vehicle.chech_start()) {
                        Maintenance maintenance = new Maintenance(vehicle.getId());
                        maintenance.setVisible(true);
                        maintenance.setLocationRelativeTo(null);  
                        break;
                    }
                    Thread.sleep(5000);
                } catch (Exception ex) {
                    Logger.getLogger(Manager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        });
        updateThread.start();
    } 
   public boolean checkForm() {
        if (Start.getText().isEmpty() || End.getText().isEmpty() ) {
            return false;
        }
        return true;
    }
     public boolean checkDate(String str) {
        dateFormat.setLenient(false); // Không cho phép chuyển đổi mềm dẻo
        try {
            // Kiểm tra việc chuyển đổi chuỗi thành đối tượng Date
            dateFormat.parse(str);
            return true;
        } catch (ParseException e) {
            // Nếu có lỗi xảy ra, chuỗi không đúng định dạng
            return false;
        }
    }
     public boolean checkLogic() {
        String start = Start.getText();
        String end = End.getText();
        return Schedule.check_logic_date(start) && Schedule.check_logic_date(end);
    }

    public boolean checkLogicCompare() {
        String start = Start.getText();
        String end = End.getText();
        return Schedule.check_logic_date(start, end);
    }
      public boolean validataForm() {
        if (!checkDate(Start.getText()) || !checkDate(End.getText())) {
            return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ID = new javax.swing.JLabel();
        Type = new javax.swing.JLabel();
        Weight = new javax.swing.JLabel();
        Fuel = new javax.swing.JLabel();
        Size = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        All_km = new javax.swing.JLabel();
        Km_before = new javax.swing.JLabel();
        Is_main = new javax.swing.JLabel();
        Fuel_price = new javax.swing.JLabel();
        mainEnd = new javax.swing.JLabel();
        mainStart = new javax.swing.JLabel();
        License = new javax.swing.JLabel();
        Fuel_rate = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Start = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        End = new javax.swing.JTextField();
        Schedule_maintenance = new javax.swing.JButton();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ID.setText("ID:");

        Type.setText("Type:");

        Weight.setText("Weight:");

        Fuel.setText("Fuel:");

        Size.setText("Size:");

        Status.setText("Status:");

        All_km.setText("All km:");

        Km_before.setText("Km before maintenace:");

        Is_main.setText("Is need maintenace:");

        Fuel_price.setText("Price  of fuel / liter:");

        mainEnd.setText("Maintenance end date:");

        mainStart.setText("Maintenance start date:");

        License.setText("Suitable license type: ");

        Fuel_rate.setText("Fuel consumption rate / hour: ");

        jSeparator1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSeparator1MouseClicked(evt);
            }
        });

        Start.setText("Start date");
        Start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartMouseClicked(evt);
            }
        });
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        End.setText("End date");
        End.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EndMouseClicked(evt);
            }
        });
        End.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndActionPerformed(evt);
            }
        });

        Schedule_maintenance.setText("Schedule maintenance");
        Schedule_maintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Schedule_maintenanceActionPerformed(evt);
            }
        });

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Type, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Fuel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Weight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Size, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(All_km, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Km_before, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Is_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Fuel_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Status, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(License, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Schedule_maintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Close)
                .addContainerGap(12, Short.MAX_VALUE))
            .addComponent(mainStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Fuel_rate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fuel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Weight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Size)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(All_km)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Km_before)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Is_main)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fuel_price)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fuel_rate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(License)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainEnd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Save)
                    .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Schedule_maintenance)
                    .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Close))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CloseActionPerformed

    private void Schedule_maintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Schedule_maintenanceActionPerformed
        try {
            // TODO add your handling code here:
            int vehicle_id = IDofVehicle;
            Vehicles vehicle = Manager.getVehicle(vehicle_id);
            if(vehicle.is_maintenance()) {
                JOptionPane.showMessageDialog(this, "Vehicle is under_maintenance");
                resetText();
                return;
            }
            setButtonTrue();
        } catch (Exception ex) {
            Logger.getLogger(MoreInformationVehicles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Schedule_maintenanceActionPerformed

    private void EndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndActionPerformed

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartActionPerformed
    public void resetText() {
        Start.setText("Start date");
        End.setText("End date");
    }
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        try {
            // TODO add your handling code here:
            if(!checkForm()) {
                JOptionPane.showMessageDialog(this, "Please enter the correct and complete fields !");
                resetText();
                return;
            } else if(!validataForm()) {
                JOptionPane.showMessageDialog(this, "Please re-enter the information in the correct format (yyyy-MM-dd HH:mm:ss) !");
                resetText();
                return;
            } else if (checkLogic()) {
                JOptionPane.showMessageDialog(this, "Date must be after current time");
                resetText();
                return;
            } else if (!checkLogicCompare()) {
                JOptionPane.showMessageDialog(this, "Start date must before end date");
                resetText();
                return;
            }
            
            int vehicle_id = IDofVehicle;
            Vehicles vehicle = Manager.getVehicle(vehicle_id);
            vehicle.setDate_start(Start.getText());
            vehicle.setDate_end(End.getText());
            mainStart.setText("Maintenance start date: " + Start.getText());
            mainEnd.setText("Maintenance end date: " + End.getText());
            check_vehicle_start_maintenance(vehicle);
            check_vehicle_done_maintenance(vehicle);
            Manager.updateVehicles();
            setButtonFalse();
        } catch (Exception ex) {
            Logger.getLogger(MoreInformationVehicles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void StartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMouseClicked
        // TODO add your handling code here:
        Start.setText("");
    }//GEN-LAST:event_StartMouseClicked

    private void jSeparator1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSeparator1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jSeparator1MouseClicked

    private void EndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EndMouseClicked
        // TODO add your handling code here:
        End.setText("");
    }//GEN-LAST:event_EndMouseClicked
    public void setButtonFalse() {
        Start.setVisible(false);
        End.setVisible(false);
        Save.setVisible(false);
    }
    public void setButtonTrue() {
        Start.setVisible(true);
        End.setVisible(true);
        Save.setVisible(true);
    }
    public void setInfo(Vehicles vehicle) throws Exception {
        ID.setText("ID: " + vehicle.getId());
        Type.setText("Type: " + vehicle.getType().toString());
        Fuel.setText("Fuel: " + vehicle.getFuel().toString());
        Weight.setText("Weight: " + vehicle.getWeight()+" ton");
        Size.setText("Size: " + vehicle.getSize()+ " m");
        Status.setText("Status: " + vehicle.getStatus().toString());
        All_km.setText("All km: " + vehicle.getAll_km()+" km");
        Km_before.setText("Km before maintenace: " + vehicle.getKm_before_maintenace()+" km");
        Is_main.setText("Is need maintenace: " + vehicle.is_need_maintenace());
        Fuel_price.setText("Price of fuel / liter: " + Vehicles.get_price_fuel(vehicle.getFuel()) + " thousand dong / liter");
        Fuel_rate.setText("Fuel consumption rate / hour: " + Vehicles.get_fuel_cosumption_rate(vehicle.getType(), vehicle.getFuel()) + " liter / hour");
        License.setText("Suitable license type: " + vehicle.get_all_suitable_license());
        mainStart.setText("Maintenance start date: " + vehicle.getDate_start());
        mainEnd.setText("Maintenance end date: " + vehicle.getDate_end());
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel All_km;
    private javax.swing.JButton Close;
    private javax.swing.JTextField End;
    private javax.swing.JLabel Fuel;
    private javax.swing.JLabel Fuel_price;
    private javax.swing.JLabel Fuel_rate;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel Is_main;
    private javax.swing.JLabel Km_before;
    private javax.swing.JLabel License;
    private javax.swing.JButton Save;
    private javax.swing.JButton Schedule_maintenance;
    private javax.swing.JLabel Size;
    private javax.swing.JTextField Start;
    private javax.swing.JLabel Status;
    private javax.swing.JLabel Type;
    private javax.swing.JLabel Weight;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel mainEnd;
    private javax.swing.JLabel mainStart;
    // End of variables declaration//GEN-END:variables
}
