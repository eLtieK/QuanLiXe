/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu.trip;

import menu.vehicle.TableVehicles;
import menu.driver.Table;
import database.Drivers;
import database.Manager;
import database.Trips;
import database.Vehicles;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import menu.menu;

/**
 *
 * @author User
 */
public class addTrips extends javax.swing.JFrame {

    /**
     * Creates new form addTrips
     */
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");

    public addTrips() {
        initComponents();
        str1 = "Ho_Chi_Minh";
        str2 = "Ha_Noi";
        this.setTitle("ADD TRIPS");
        Enter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        Help = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        IdVehicles = new javax.swing.JTextField();
        IdDriver = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        dateStart = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        StartLocation = new javax.swing.JLabel();
        EndLocation = new javax.swing.JLabel();
        TimeStart = new javax.swing.JLabel();
        CbStart = new javax.swing.JComboBox<>();
        CbEnd = new javax.swing.JComboBox<>();
        txtDateStart = new javax.swing.JTextField();
        txtTimeStart = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("SVN-Bear", 1, 24)); // NOI18N
        jLabel4.setText("Back");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setFont(new java.awt.Font("SVN-Bear", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Desired Vehicle Type : ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 140, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(204, 204, 204));
        jComboBox1.setForeground(new java.awt.Color(51, 51, 51));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Truck", "Coach", "Car", "Container" }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, -1, 30));

        jButton6.setFont(new java.awt.Font("SVN-Bear", 1, 18)); // NOI18N
        jButton6.setText("Optimize Trip");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, -1, 40));

        Help.setFont(new java.awt.Font("SVN-Bear", 1, 18)); // NOI18N
        Help.setText("Help");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        jPanel1.add(Help, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        jLabel1.setFont(new java.awt.Font("SVN-Bear", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Add Trips");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 140, -1));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("SVN-Bear", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("ID of Driver ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 140, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        IdVehicles.setBackground(new java.awt.Color(204, 204, 204));
        IdVehicles.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(IdVehicles, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 346, 110, 30));

        IdDriver.setBackground(new java.awt.Color(204, 204, 204));
        IdDriver.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(IdDriver, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 296, 110, 30));

        jButton5.setFont(new java.awt.Font("SVN-Bear", 1, 18)); // NOI18N
        jButton5.setText("List of Trips");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 160, 30));

        dateStart.setFont(new java.awt.Font("SVN-Bear", 1, 24)); // NOI18N
        dateStart.setForeground(new java.awt.Color(51, 51, 51));
        dateStart.setText("Date Start :");
        jPanel1.add(dateStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 30));

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("SVN-Bear", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("ID of Vehicle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 140, 40));

        StartLocation.setFont(new java.awt.Font("SVN-Bear", 1, 24)); // NOI18N
        StartLocation.setForeground(new java.awt.Color(51, 51, 51));
        StartLocation.setText("Starting Location :");
        jPanel1.add(StartLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, 30));

        EndLocation.setFont(new java.awt.Font("SVN-Bear", 1, 24)); // NOI18N
        EndLocation.setForeground(new java.awt.Color(51, 51, 51));
        EndLocation.setText("Ending Location :");
        jPanel1.add(EndLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 30));

        TimeStart.setFont(new java.awt.Font("SVN-Bear", 1, 24)); // NOI18N
        TimeStart.setForeground(new java.awt.Color(51, 51, 51));
        TimeStart.setText("Time Start :");
        jPanel1.add(TimeStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 30));

        CbStart.setBackground(new java.awt.Color(204, 204, 204));
        CbStart.setForeground(new java.awt.Color(0, 0, 0));
        CbStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ho_Chi_Minh", "Ha_Noi", "Da_Nang", "Hue", "Can_Tho", "Hai_Phong" }));
        CbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbStartActionPerformed(evt);
            }
        });
        jPanel1.add(CbStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, 30));

        CbEnd.setBackground(new java.awt.Color(204, 204, 204));
        CbEnd.setForeground(new java.awt.Color(0, 0, 0));
        CbEnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ha_Noi", "Ho_Chi_Minh", "Da_Nang", "Hue", "Can_Tho", "Hai_Phong" }));
        CbEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbEndActionPerformed(evt);
            }
        });
        jPanel1.add(CbEnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, -1, 30));

        txtDateStart.setBackground(new java.awt.Color(204, 204, 204));
        txtDateStart.setForeground(new java.awt.Color(51, 51, 51));
        txtDateStart.setText("yyyy-MM-dd");
        txtDateStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDateStartMouseClicked(evt);
            }
        });
        txtDateStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateStartActionPerformed(evt);
            }
        });
        jPanel1.add(txtDateStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 120, -1));

        txtTimeStart.setBackground(new java.awt.Color(204, 204, 204));
        txtTimeStart.setForeground(new java.awt.Color(51, 51, 51));
        txtTimeStart.setText("HH:mm:ss");
        txtTimeStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimeStartMouseClicked(evt);
            }
        });
        jPanel1.add(txtTimeStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 120, -1));

        Save.setFont(new java.awt.Font("SVN-Bear", 1, 18)); // NOI18N
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        jPanel1.add(Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 80, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon("E:\\HocTap\\QuanLiXe\\app\\src\\main\\resources\\icon\\—Pngtree—10 1 national day holiday_961718 (1).jpg")); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   String str1, str2;

    public void Enter() {

        txtDateStart.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        txtTimeStart.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        IdDriver.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        IdVehicles.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        CbStart.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        CbEnd.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        jComboBox1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        jButton6.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        jButton5.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
        Help.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    save();
                }
            }
        });
    }

    public void resetCB() {
        CbStart.setSelectedIndex(0);
        CbEnd.setSelectedIndex(0);
    }
    private void CbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbStartActionPerformed
        // TODO add your handling code here:
        str1 = String.valueOf(CbStart.getSelectedItem());
        if (str1 == str2) {
            JOptionPane.showMessageDialog(this, "The starting and ending points cannot be the same location !", "ERROR", JOptionPane.ERROR_MESSAGE);
            resetCB();
        }
    }//GEN-LAST:event_CbStartActionPerformed
    public boolean checkDate(String str) {
        dateFormat.setLenient(false); // Không cho phép chuyển đổi mềm dẻo
        try {
            // Kiểm tra việc chuyển đổi chuỗi thành đối tượng Date
            dateFormat.parse(str);
            return true;
        } catch (ParseException e) {
            // Nếu có lỗi xảy ra, chuỗi không đúng định dạng
            return false;
        }
    }

    public boolean checkTime(String str) {
        timeFormat.setLenient(false); // Không cho phép chuyển đổi mềm dẻo

        try {
            // Kiểm tra việc chuyển đổi chuỗi thành đối tượng Date
            timeFormat.parse(str);
            return true;
        } catch (ParseException e) {
            // Nếu có lỗi xảy ra, chuỗi không đúng định dạng
            return false;
        }
    }

    public boolean validataForm() {
        if (!checkDate(txtDateStart.getText()) || !checkTime(txtTimeStart.getText())) {
            return false;
        }
        return true;
    }


    private void CbEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbEndActionPerformed
        // TODO add your handling code here:
        str2 = String.valueOf(CbEnd.getSelectedItem());
        if (str1 == str2) {
            JOptionPane.showMessageDialog(this, "The starting and ending points cannot be the same location !", "ERROR", JOptionPane.ERROR_MESSAGE);
            resetCB();
        }
    }//GEN-LAST:event_CbEndActionPerformed
    public boolean checkForm() {
        if (txtDateStart.getText().isEmpty() || txtTimeStart.getText().isEmpty() || IdDriver.getText().isEmpty() || IdVehicles.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            // TODO add your handling code here:
            TableTrips tabletrip = new TableTrips();
            tabletrip.setVisible(true);
            tabletrip.setLocationRelativeTo(null);
        } catch (Exception ex) {
            Logger.getLogger(addTrips.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    public boolean checkSo(String str) {
        if (str == null || str.length() == 0) {
            return false;
        }
        for (char c : str.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }

    public boolean checkID(int DriverID, int VehicleID) throws Exception {
        return Manager.checkValidDriver(DriverID) && Manager.checkValidVehicle(VehicleID);
    }

    public boolean checksuitable(int driverID, int vehicleID) throws Exception {
        Drivers driver = Manager.getDriver(driverID);
        Vehicles vehicle = Manager.getVehicle(vehicleID);
        return Trips.check_suitable(driver.getLicense(), vehicle.getType());
    }

    public void save() {
        if (checkForm()) {
            if (!validataForm()) {
                JOptionPane.showMessageDialog(this, "Please re-enter the information in the correct format !");
                resetText();
                return;
            }

            try {
                Manager manager = Manager.getInstance();
                String datestart = txtDateStart.getText();
                String timestart = txtTimeStart.getText();
                Trips.Destination start = Trips.fromStringDestination(String.valueOf(CbStart.getSelectedItem()));
                Trips.Destination end = Trips.fromStringDestination(String.valueOf(CbEnd.getSelectedItem()));
                int idDriver = Integer.parseInt(IdDriver.getText());
                int idVehicle = Integer.parseInt(IdVehicles.getText());
                if (!checkID(idDriver, idVehicle)) {
                    JOptionPane.showMessageDialog(this, "ID vehicle or driver is not available !");
                    resetText();
                    return;
                } else if (Manager.checkDriverInTrip(idDriver)) {
                    JOptionPane.showMessageDialog(this, "Driver in trip");
                    resetText();
                    return;
                } else if (Manager.checkVehicleInTrip(idVehicle)) {
                    JOptionPane.showMessageDialog(this, "Vehicle in trip");
                    resetText();
                    return;
                } else if (Manager.getVehicle(idVehicle).is_maintenance()) {
                    JOptionPane.showMessageDialog(this, "Vehicle is under_maintenance");
                    resetText();
                    return;
                } else if (Manager.getDriver(idDriver).is_on_leave()) {
                    JOptionPane.showMessageDialog(this, "Driver is on_leave");
                    resetText();
                    return;
                } else if (!Trips.check_driver_enough_performance(idDriver, start, end)) {
                    JOptionPane.showMessageDialog(this, "Driver is low of performance");
                    resetText();
                    return;
                } else if (!checksuitable(idDriver, idVehicle)) {
                    JOptionPane.showMessageDialog(this, "Driver and Vehicle are not suitable!");
                    resetText();
                    return;
                }

                Trips trip = new Trips(timestart, datestart, start, end, Trips.Status.waiting, idVehicle, idDriver, Manager.getNewTripId());
                trip.set_up_in_trip();
                Manager.addTrip(trip);
                JOptionPane.showMessageDialog(this, "Saved information successfully !");
                resetText();
                check_trip_on_duty(trip);
            } catch (Exception ex) {
                Logger.getLogger(addTrips.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please enter the correct and complete fields !");
            resetText();
        }

    }
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        save();
    }//GEN-LAST:event_SaveActionPerformed

    private void txtDateStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateStartActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDateStartActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Table tableDriver;
            tableDriver = new Table();
            tableDriver.setVisible(true);
            tableDriver.setLocationRelativeTo(null);
        } catch (Exception ex) {
            Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void check_trip_on_duty(Trips trip) {
        Thread updateThread = new Thread(() -> {
            while (true) {
                try {
                    if (trip.trip_on_ready()) {
                        OnTrip on_trip = new OnTrip(trip.getId());
                        on_trip.setVisible(true);
                        on_trip.setLocationRelativeTo(null);
                        break;
                    }
                    if (trip.is_done()) {
                        break;
                    }
                    Thread.sleep(5000);
                } catch (Exception ex) {
                    Logger.getLogger(addTrips.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        });
        updateThread.start();
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TableVehicles tableVe;
        try {
            tableVe = new TableVehicles();
            tableVe.setVisible(true);
            tableVe.setLocationRelativeTo(null);
        } catch (Exception ex) {
            Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton2ActionPerformed
    public void resetText() {
        txtDateStart.setText("yyyy-MM-dd");
        txtTimeStart.setText("HH:mm:ss");
        IdDriver.setText("");
        IdVehicles.setText("");
        CbStart.setSelectedIndex(0);
        CbEnd.setSelectedIndex(0);
    }
    private void txtDateStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDateStartMouseClicked
        txtDateStart.setText("");        // TODO add your handling code here:

    }//GEN-LAST:event_txtDateStartMouseClicked

    private void txtTimeStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimeStartMouseClicked
        // TODO add your handling code here:
        txtTimeStart.setText("");
    }//GEN-LAST:event_txtTimeStartMouseClicked

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        // TODO add your handling code here:
        Help help = new Help();
        help.setVisible(true);
        help.setLocationRelativeTo(null);
    }//GEN-LAST:event_HelpActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Vehicles.Type type = Vehicles.fromStringType(String.valueOf(jComboBox1.getSelectedItem()));
        int vehicleID = Manager.getBestVehicle(type);
        int driverID = Manager.getBestDriver(type);
        if (vehicleID == -1 || driverID == -1) {
            JOptionPane.showMessageDialog(this, "No vehicle or driver suitable for the vehicle type !");
            return;
        }
        IdDriver.setText(String.valueOf(driverID));
        IdVehicles.setText(String.valueOf(vehicleID));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        menu menuFrame = new menu();
        menuFrame.setVisible(true);
        menuFrame.pack();
        menuFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addTrips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addTrips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addTrips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addTrips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addTrips().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbEnd;
    private javax.swing.JComboBox<String> CbStart;
    private javax.swing.JLabel EndLocation;
    private javax.swing.JButton Help;
    private javax.swing.JTextField IdDriver;
    private javax.swing.JTextField IdVehicles;
    private javax.swing.JButton Save;
    private javax.swing.JLabel StartLocation;
    private javax.swing.JLabel TimeStart;
    private javax.swing.JLabel dateStart;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDateStart;
    private javax.swing.JTextField txtTimeStart;
    // End of variables declaration//GEN-END:variables
}
